<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>





  <bean id="org.sakaiproject.content.api.ContentHostingService.jcr"
			class="org.sakaiproject.content.impl.JCRContentService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">

		<property name="memoryService"><ref bean="org.sakaiproject.memory.api.MemoryService"/></property>
		<property name="aliasService"><ref bean="org.sakaiproject.alias.api.AliasService"/></property>
		<property name="siteService"><ref bean="org.sakaiproject.site.api.SiteService"/></property>
		<property name="notificationService"><ref bean="org.sakaiproject.event.api.NotificationService"/></property>
		<property name="serverConfigurationService"><ref bean="org.sakaiproject.component.api.ServerConfigurationService"/></property>
		<property name="entityManager"><ref bean="org.sakaiproject.entity.api.EntityManager"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.db.api.SqlService"/></property>
		<property name="lockManager"><ref bean="org.sakaiproject.content.api.LockManager"/></property>
		<property name="authzGroupService"><ref bean="org.sakaiproject.authz.api.AuthzGroupService"/></property>
		<property name="resourceTypeRegistry"><ref bean="org.sakaiproject.content.api.ResourceTypeRegistry"/></property>
 
<!--        <property name="contentHostingHandlerResolver"><ref bean="org.sakaiproject.content.api.ContentHostingHandlerResolver"/></property> -->
 
 		<property name="collectionTableName"><value>CONTENT_COLLECTION</value></property>
 		<property name="resourceTableName"><value>CONTENT_RESOURCE</value></property>
 		<property name="resourceBodyTableName"><value>CONTENT_RESOURCE_BODY_BINARY</value></property>
 		<property name="locksInDb"><value>false</value></property>
		<property name="bodyPath"><null/></property>
		<property name="bodyVolumes"><null/></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
 		<property name="siteQuota"><value>1048576</value></property>
		<property name="availabilityChecksEnabled"><value>true</value></property>
		<property name="prioritySortEnabled"><value>true</value></property>
		<property name="useResourceTypeRegistry"><value>true</value></property>
		
		<property name="storage"><ref bean="org.sakaiproject.content.api.ContentHostingService.storage" /></property>
		
  	</bean>


	<bean id="org.sakaiproject.content.api.ContentHostingService.storage" 
			class="org.sakaiproject.content.impl.JCRStorage"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="jcrService"><ref bean="org.sakaiproject.jcr.api.JCRService" /></property>
		<property name="jcrContentService"><ref bean="org.sakaiproject.content.api.ContentHostingService.jcr" /></property>
		<property name="resourceUser"><ref bean="org.sakaiproject.content.api.ContentHostingService.storageUser" /></property>
		<property name="collectionUser"><ref bean="org.sakaiproject.content.api.ContentHostingService.storageUser" /></property>
<!--		<property name="resolver"><ref bean="org.sakaiproject.content.api.ContentHostingHandlerResolver" /></property> -->
		<property name="jcrRegistrationService" ><ref bean="org.sakaiproject.jcr.api.JCRRegistrationService" /></property>
		<property name="namespaces" >
			<map>
				<entry key="SAKAI"><value>http://www.sakaiproject.org/CHS/jcr/SAKAI/1.0</value></entry>
   			</map>
		</property>
		<!-- convertable namespaces are namespaces that will be converted into jrc types based on their name -->
		<property name="convertableNamespaces" >
			<map>
        		<entry key="dc" ><value>http://purl.org/dc/elements/1.1/</value></entry>
        		<entry key="dcterms" ><value>http://purl.org/dc/terms/</value></entry>
   			</map>
		</property>
		<property name="nodetypeReources" >
			<list>
				<value>/org/sakaiproject/content/imp/CHSNodeTypes.xml</value>
			</list>
		</property>
		
		<property name="resourceCache" ><ref bean="org.sakaiproject.content.api.ContentHostingService.storage.resourcecache" /></property>
		<property name="collectionCache" ><ref bean="org.sakaiproject.content.api.ContentHostingService.storage.collectioncache" /></property>
	</bean>
			<bean id="org.sakaiproject.content.api.ContentHostingService.storage.resourcecache" 
				class="org.sakaiproject.content.impl.ThreadLocalCache" >
				<property name="threadLocalManager" ><ref bean="org.sakaiproject.thread_local.api.ThreadLocalManager" /></property>
				<property name="name" ><value>org.sakaiproject.content.api.ContentHostingService.storage.resourcecache</value></property>
				<property name="clean" ><value>true</value></property>
			</bean>
			<bean id="org.sakaiproject.content.api.ContentHostingService.storage.collectioncache" 
				class="org.sakaiproject.content.impl.ThreadLocalCache" >
				<property name="threadLocalManager" ><ref bean="org.sakaiproject.thread_local.api.ThreadLocalManager" /></property>
				<property name="name" ><value>org.sakaiproject.content.api.ContentHostingService.storage.collectioncache</value></property>
				<property name="clean" ><value>true</value></property>
			</bean>
	

	<bean id="org.sakaiproject.content.api.ContentHostingService.storageUser" 
			class="org.sakaiproject.content.impl.JCRStorageUser"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
        <property name="baseContentService"><ref bean="org.sakaiproject.content.api.ContentHostingService.jcr"/></property>
        <property name="createNodes" >
        	<list>
        		<value>/group;nt:folder;group</value>
        		<value>/user;nt:folder;user</value>
				<value>/group-user;nt:folder;group-user</value>
				<value>/public;nt:folder;public</value>
				<value>/private;nt:folder;private</value>
<!--				<value>/meleteDocs;nt:folder</value> -->
				<value>/attachment;nt:folder;attachment</value>
    		</list>
        </property>
        
	</bean>


	

</beans>
