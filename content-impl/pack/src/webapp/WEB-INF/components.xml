<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<bean id="org.sakaiproject.content.api.ContentHostingService"
			class="org.sakaiproject.content.impl.JCRContentService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">

		<property name="memoryService"><ref bean="org.sakaiproject.memory.api.MemoryService"/></property>
		<property name="aliasService"><ref bean="org.sakaiproject.alias.api.AliasService"/></property>
		<property name="siteService"><ref bean="org.sakaiproject.site.api.SiteService"/></property>
		<property name="notificationService"><ref bean="org.sakaiproject.event.api.NotificationService"/></property>
		<property name="serverConfigurationService"><ref bean="org.sakaiproject.component.api.ServerConfigurationService"/></property>
		<property name="entityManager"><ref bean="org.sakaiproject.entity.api.EntityManager"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.db.api.SqlService"/></property>
		<property name="lockManager"><ref bean="org.sakaiproject.content.api.LockManager"/></property>
		<property name="authzGroupService"><ref bean="org.sakaiproject.authz.api.AuthzGroupService"/></property>
		<property name="resourceTypeRegistry"><ref bean="org.sakaiproject.content.api.ResourceTypeRegistry"/></property>
 
        <property name="contentHostingHandlerResolver"><ref bean="org.sakaiproject.content.api.ContentHostingHandlerResolver"/></property>
 
 		<property name="collectionTableName"><value>CONTENT_COLLECTION</value></property>
 		<property name="resourceTableName"><value>CONTENT_RESOURCE</value></property>
 		<property name="resourceBodyTableName"><value>CONTENT_RESOURCE_BODY_BINARY</value></property>
 		<property name="locksInDb"><value>false</value></property>
		<property name="bodyPath"><null/></property>
		<property name="bodyVolumes"><null/></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
 		<property name="siteQuota"><value>1048576</value></property>
		<property name="availabilityChecksEnabled"><value>true</value></property>
		<property name="prioritySortEnabled"><value>true</value></property>
		<property name="useResourceTypeRegistry"><value>true</value></property>
		
		<property name="storage"><ref bean="org.sakaiproject.content.api.ContentHostingService.storage" /></property>
		
  	</bean>


	<bean id="org.sakaiproject.content.api.ContentHostingService.storage" 
			class="org.sakaiproject.content.impl.JCRStorage"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="jcrService"><ref bean="org.sakaiproject.jcr.api.JCRService" /></property>
		<property name="jcrContentService"><ref bean="org.sakaiproject.content.api.ContentHostingService" /></property>
		<property name="resourceUser"><ref bean="org.sakaiproject.content.api.ContentHostingService.storageUser" /></property>
		<property name="collectionUser"><ref bean="org.sakaiproject.content.api.ContentHostingService.storageUser" /></property>
		<property name="resolver"><ref bean="org.sakaiproject.content.api.ContentHostingHandlerResolver" /></property>
		
	</bean>

	<bean id="org.sakaiproject.content.api.ContentHostingService.storageUser" 
			class="org.sakaiproject.content.impl.JCRStorageUser"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
        <property name="baseContentService"><ref bean="org.sakaiproject.content.api.ContentHostingService"/></property>
        <property name="jcrTypes">
        	<map>
        		<entry key="jcr:mixinTypes" ><value>ignore</value></entry>
        		<entry key="jcr:lockIsDeep" ><value>ignore</value></entry>
        		<entry key="jcr:lockOwner" ><value>ignore</value></entry>
        		<entry key="jcr:primaryType" ><value>ignore</value></entry>
        		<entry key="jcr:uuid" ><value>ignore</value></entry>
        		<entry key="jcr_property_name" ><value>ignore or jcr type see PropertyType</value></entry>
        	</map>
        </property>
        <property name="jcrToEntity" >
        	<map>
        		<entry key="jcr_property_name" ><value>sakai property mapping</value></entry>
        	</map>        	
        </property>
        <property name="entityToJcr" >
        	<map>
        		<entry key="sakai_property_name" ><value>jcr property mapping</value></entry>
        	</map>        	
        </property>
        <property name="createNodes" >
        	<list>
        		<value>/group;nt:folder</value>
        		<value>/user;nt:folder</value>
        	</list>
        </property>
        
	</bean>

	<bean id="org.sakaiproject.content.api.ContentHostingHandlerResolver"
			class="org.sakaiproject.content.impl.ContentHostingHandlerResolverImpl"
			singleton="true">
		<property name="storage"><ref bean="org.sakaiproject.content.api.ContentHostingService.storage" /></property>
	</bean>

<!--
	<bean id="uk.ac.cam.caret.ContentHostingHandlerFileSystemImpl.0000"
			class="org.sakaiproject.content.impl.ContentHostingHandlerImplFileSystem"
			singleton="true">
			<property name="contentHostingHandlerResolver" ><ref bean="org.sakaiproject.content.api.ContentHostingHandlerResolver"/></property>
	</bean>
-->

	<bean id="org.sakaiproject.content.api.ContentTypeImageService"
			class="org.sakaiproject.content.impl.BasicContentTypeImageService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
 		<property name="imageFile"><value>content_type_images.properties</value></property>
 		<property name="nameFile"><value>content_type_names.properties</value></property>
 		<property name="extensionFile"><value>content_type_extensions.properties</value></property>
	</bean>

	<bean id="org.sakaiproject.content.api.ContentResourceFilter.base"
			class="org.sakaiproject.content.impl.BaseExtensionResourceFilter">
		<property name="viewAll"><value>true</value></property>
		<property name="mimeTypes"><list/></property>
	</bean>

	<bean id="lockManagerHibernateMappings"
			class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">
		<property name="mappingResources">
			<list>
				<value>org/sakaiproject/content/hbm/LockManager.hbm.xml</value>
			</list>
		</property>
	</bean>

	<bean id="org.sakaiproject.content.impl.LockManagerTarget"
			class="org.sakaiproject.content.impl.LockManagerImpl"
			singleton="true">
		<property name="sessionFactory">
			<ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
		</property>
	</bean>

	<bean id="org.sakaiproject.content.api.LockManager"
			class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
			singleton="true">
		<property name="transactionManager">
			<ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/>
		</property>
		<property name="target">
			<ref bean="org.sakaiproject.content.impl.LockManagerTarget"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="org.sakaiproject.content.api.ResourceTypeRegistry"
			class="org.sakaiproject.content.impl.DbResourceTypeRegistry"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="sqlService"><ref bean="org.sakaiproject.db.api.SqlService"/></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>
	
	
	
	

</beans>
